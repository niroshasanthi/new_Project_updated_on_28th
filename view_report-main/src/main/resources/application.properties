spring.application.name=view_members

# Eureka client configs - register with Eureka server & fetch registry

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
server.port=8086
spring.cloud.config.import=optional:configserver:
spring.cloud.config.enabled=false
eureka.server.peer-node-read-timeout-ms=1000000
# PostgreSQL Database Configuration (example)

spring.datasource.url=jdbc:postgresql://localhost:5432/parental_control

spring.datasource.username=postgres

spring.datasource.password=admin

#spring.datasource.driver-class-name=org.postgresql.Driver

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.web.access.ExceptionTranslationFilter=TRACE
logging.level.org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter=TRACE

# JPA Configuration

spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

springdoc.swagger-ui.path=/swagger-ui.html

# CORS for frontend (if using React on localhost:3000)

spring.web.cors.allowed-origins=http://localhost:3000

spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS

spring.web.cors.allowed-headers=*

spring.web.cors.allow-credentials=true



# JWT Secret (if you use JWT security)

jwt.secret=your-32-character-or-longer-secret-key-1234456789_kapaathunga

# Custom JWT properties required by your JwtService
security.jwt.secret=your-32-character-or-longer-secret-key-1234456789_kapaathunga
security.jwt.expiration-minutes=60
