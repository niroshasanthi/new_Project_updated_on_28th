# Spring Application Name (for Eureka)
spring.application.name=member_Service


server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=always
logging.level.org.springframework.security=DEBUG
logging.level.com.example=DEBUG


# Eureka Client Configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.server.peer-node-read-timeout-ms=100000000

springdoc.swagger-ui.path=/swagger-ui.html

server.port=8084
spring.cloud.config.import=optional:configserver:
spring.cloud.config.enabled=false

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/parental_control
# Your database name
spring.datasource.username=postgres
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver



# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update 
# 'update' will create/update tables. Use 'none' in production.
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# CORS Configuration (Crucial for React frontend)
spring.web.cors.allowed-origins=http://localhost:3000 
# Your React app's URL
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# JWT Secret (for security, make this strong and store securely)
# Custom JWT properties required by your JwtService
security.jwt.secret=your-32-character-or-longer-secret-key-1234456789_kapaathunga
security.jwt.expiration-minutes=720
